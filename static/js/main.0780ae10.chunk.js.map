{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","sortAlphabetically","setState","sortByLength","reverseListOfGoods","resetListOfGoods","this","visibleGoods","goods","sort","a","b","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAU,GAHd,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEF,SAAU,KAP9B,EAUEG,aAAe,WACb,EAAKD,SAAS,CAAEF,SAAU,KAX9B,EAcEI,mBAAqB,WACnB,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBEM,iBAAmB,WACjB,EAAKH,SAAS,CACZF,SAAU,EACVD,YAAY,KAvBlB,4CA2BE,WACE,MAAiCO,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAhEH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNQ,EAAY,YAAOC,GAEzB,OAAQR,GACN,KAAK,EACHO,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAK,EACHJ,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAc7C,OARId,GACFQ,EAAaO,UAKfC,QAAQC,IAAIhB,EAAUD,GAEfQ,EAsCgBU,CAAkBrB,EAAiBU,KAAKR,OAE7D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAyB,IAAbpB,IAEhBqB,QAASf,KAAKL,mBANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAyB,IAAbpB,IAEhBqB,QAASf,KAAKH,aANhB,4BAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASf,KAAKF,mBANhB,sBAWEJ,GAAYD,IACZ,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,iBAHhB,sBAUJ,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAhFrB,GAAyBC,aC9DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0780ae10.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 1:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case 2:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reverseListOfGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetListOfGoods = () => {\n    this.setState({\n      sortType: 0,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== 1 },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== 2 },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseListOfGoods}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetListOfGoods}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}